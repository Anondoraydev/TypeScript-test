{
  // ЁЯСЙ Getter ржПржмржВ Setter ржПрж░ ржмрзНржпржмрж╣рж╛рж░

  class BankAccount {
    public readonly id: number; // ЁЯСЙ ржПржХржмрж╛рж░ assign ржХрж░рж▓рзЗ ржЖрж░ ржмржжрж▓рж╛ржирзЛ ржпрж╛ржмрзЗ ржирж╛
    public name: string; // ЁЯСЙ ржмрж╛ржЗрж░рзЗ ржерзЗржХрзЗ access ржХрж░рж╛ ржпрж╛ржмрзЗ
    private _balance: number; // ЁЯСЙ рж╢рзБржзрзБ ржХрзНрж▓рж╛рж╕рзЗрж░ ржнрж┐рждрж░рзЗржЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрж╛ржмрзЗ

    constructor(id: number, name: string, balance: number) {
      this.id = id;
      this.name = name;
      this._balance = balance;
    }

    // ЁЯСЙ Setter: ржпржЦржи deposit ржХрж░рж╛ рж╣ржмрзЗ, рждржЦржи ржПржЗ setter call рж╣ржмрзЗ
    set defosit(amount: number) {
      this._balance = this.Balance + amount;
    }

    // ЁЯСЙ Getter: balance access ржХрж░рж╛рж░ рж╕ржорзЯ ржПржЗ method call рж╣ржмрзЗ
    get Balance(): number {
      return this._balance;
    }
  }

  // тЬЕ ржирждрзБржи ржПржХржЯрж┐ account рждрзИрж░рж┐ ржХрж░рж╛
  const poormanAccunt = new BankAccount(111, 'ajoy', 500);

  // тЬЕ deposit ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ (setter ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ)
  poormanAccunt.defosit = 10;

  // тЬЕ balance check ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ (getter ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ)
  const myBalance = poormanAccunt.Balance;

  console.log(myBalance); // ЁЯСЙ Output: 510
}
